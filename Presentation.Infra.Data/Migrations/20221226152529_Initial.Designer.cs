// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Presentation.Infra.Data.Context;

#nullable disable

namespace Presentation.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221226152529_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Presentation.Domain.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonalInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "paolo.fullone@xpi.com.br",
                            Password = "Password123"
                        });
                });

            modelBuilder.Entity("Presentation.Domain.Entities.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Animals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteBook")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteFood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteMovie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteMusic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteSport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FavoriteTVShow")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LinkedinUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaritalStatus")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PersonalInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Animals = "2 cachorros, 2(n) coelhos",
                            BirthDate = new DateTime(1978, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Coronel Fabriciano",
                            FavoriteBook = "Ponto de Inflexão",
                            FavoriteFood = "Churrasco",
                            FavoriteMovie = "Interstellar",
                            FavoriteMusic = "Depende",
                            FavoriteSport = "Tenis",
                            FavoriteTVShow = "Dark",
                            FullName = "Paolo Enrico Iacono Fullone",
                            LinkedinUrl = "https://www.linkedin.com/in/paolofullone/",
                            MaritalStatus = 1,
                            PersonId = 1,
                            State = "MG"
                        });
                });

            modelBuilder.Entity("Presentation.Domain.Entities.PersonalInfo", b =>
                {
                    b.HasOne("Presentation.Domain.Entities.Person", "Person")
                        .WithOne("PersonalInfo")
                        .HasForeignKey("Presentation.Domain.Entities.PersonalInfo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Presentation.Domain.Entities.Person", b =>
                {
                    b.Navigation("PersonalInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
